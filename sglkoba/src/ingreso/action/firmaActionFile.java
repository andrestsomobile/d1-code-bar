package ingreso.action;import java.io.File;import java.io.IOException;import java.io.PrintWriter;import java.nio.file.Files;import java.nio.file.Path;import java.nio.file.Paths;import javax.servlet.ServletException;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import org.apache.struts.action.Action;import org.apache.struts.action.ActionForm;import org.apache.struts.action.ActionForward;import org.apache.struts.action.ActionMapping;import org.apache.struts.action.ActionMessage;import org.json.JSONObject;import ingreso.control.gsttrafico;import ingreso.entity.inspeccion_recibo;import util.JsonUtil;import util.Propiedades;public final class firmaActionFile extends Action {	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws IOException, ServletException {		JsonUtil msg = new JsonUtil();		try {			String base64Code = request.getParameter("baseCode").replace(" ", "+");						String trafcodsx = request.getParameter("trafcodsx");			String rutaContexto = request.getRealPath("") + File.separator;			String tipoAdjunto = request.getParameter("mainDirectory");			//9407			String rutaarchivo = rutaContexto + "pdf" + File.separator + tipoAdjunto + File.separator + trafcodsx;					File file = new File(rutaarchivo);			file.mkdirs();						String[] baseCodeClean = base64Code.split(",");			byte[] decodedImg = java.util.Base64.getDecoder().decode(baseCodeClean[1]);			Path destinationFile = Paths.get(rutaarchivo, "sign.jpg");			Files.write(destinationFile, decodedImg);			msg.setMessage("Firma con exito");		} catch (Exception e) {			msg.setMessage(e.getMessage());			System.out.println(e);		}		JSONObject jsonObject = new JSONObject(msg);		String myJson = jsonObject.toString();		response.setContentType("application/json");		// response.setCharacterEncoding("UTF-8");		PrintWriter out = response.getWriter();		out.print(myJson);		return mapping.findForward(null);	}}